digraph G {

  subgraph cluster_sender_state {
    node [shape=box]

    SENDERREQUEST [label="Sender establish request"]
    CREATEMAILBOX [label="Create mailbox with password"]
    SENDMAILBOX [label="Send mailbox password to sender"]
    WAITRECEIVER [label="Listen for receiver\nrequests for password"]
    CLOSE [label="EXIT: Successfully established sender-receiver\nDelete mailbox, clients can connect."] [shape=box]

    SENDERREQUEST -> CREATEMAILBOX
    CREATEMAILBOX -> SENDMAILBOX
    SENDMAILBOX -> WAITRECEIVER
    WAITRECEIVER -> CLOSE

		label = "Sender-handler state";
    fontsize = 25;
    labelloc = b;
		color="#FFFFFF";
    rank = same;
	}

  subgraph cluster_receiver_state {
    node [shape=box]

    RECEIVERREQUEST [label="Receiver establish request"]
    GETMAILBOX [label="GET MAILBOX: find\n mailbox for provided password"]
    REJECTPASSWORD [label="REJECT: no mailbox\n for provided password"]
    ACCEPTPASSWORD [label="ACCEPT: send connection details to receiver.\nUpdate mailbox, notify sender.", shape=box]

    RECEIVERREQUEST -> GETMAILBOX
    GETMAILBOX -> REJECTPASSWORD
    GETMAILBOX -> ACCEPTPASSWORD 

    label = "Receiver-handler state";
    fontsize = 25;
    labelloc = b;
		color="#FFFFFF";
    rank = same; 
	}

  EXITPOINT [label="Exit", shape=diamond]
  TIMEOUT  [label="Timeout", shape=diamond]

  WAITRECEIVER -> TIMEOUT [taillabel="No receiver in\n 5 minutes", labeldistance=5.5, labelangle=20, labelfontcolor="#cc0000", labelfontsize=10, color="#cc0000"]
  ACCEPTPASSWORD -> CLOSE:n [style=dashed, color=green]

  CLOSE -> EXITPOINT [color=green]

  rankdir=LR;
  newrank=true;
  nodesep=1.4;
}