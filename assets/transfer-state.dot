digraph G {
  rankdir=TD
  rank=same
  nodesep=1.2
  subgraph cluster_container {
    subgraph cluster_sender_state {
        node[shape=box]
        SenderHandshake [label="Sender handshake"] 
        SenderSendChunck [label="Sender Send chunck\nof data"]
        SenderSentPayload [label="Sender sent all data"]
        SenderClosing [label="Sender closing"]

        node[shape=diamond, width=1.5, height=1.5, fixedsize=true]
        SenderStream [label="More\nchuncks?"]

        node[label="",shape=none, width=0, height=0, fixedsize=false]
        s1 -> SenderHandshake
        SenderHandshake -> s2 [arrowhead=none]
        s2 -> SenderSendChunck -> SenderStream
        SenderStream -> SenderSentPayload [xlabel="No "]
        SenderSentPayload -> s3 -> s4 [arrowhead=none]
        s4 -> SenderClosing 
        SenderClosing -> s5 [arrowhead=none]

        SenderStream:nw -> SenderSendChunck[xlabel="Yes "]
        peripheries=0

      }
      subgraph cluster_receiver_state {
        node[shape=box]
        ReceiverHandshake [label="Receiver handshake"]
        ReceiverRequestPayload [label= "Receiver Request\nPayload"]
        ReceiverPayloadACK [label="Receiver Payload ACK"]
        ReceiverClosing [label="Receiver Close"]
        ReceiverClosingACK [label= "Receiver Close ACK"]

        node[shape=diamond, width=1.5, height=1.5, fixedsize=true]
        ReceiverStream [label="Data stream\nfinished?"]

        node[label="",shape=none, width=0, height=0, fixedsize=false]
        ReceiverHandshake -> r1 [arrowhead=none]
        r1 -> ReceiverRequestPayload -> ReceiverStream
        ReceiverStream -> r2 [arrowhead=none]
        r2 -> ReceiverPayloadACK -> ReceiverClosing
        ReceiverClosing -> r3 [arrowhead=none]
        r3 -> ReceiverClosingACK
        ReceiverClosingACK -> r4 [arrowhead=none]

        ReceiverStream:se -> ReceiverStream:ne [xlabel="       No"]
        peripheries=0
      }
      edge[style=dashed, constraint=false]
      ReceiverHandshake -> s1 [xlabel="Type: 1"]
      SenderHandshake -> r1 [xlabel="Type: 2"]
      ReceiverRequestPayload -> s2 [xlabel="Type: 3"]
      SenderSendChunck -> ReceiverStream [xlabel= "\nBinary\nmessage"]
      SenderSentPayload -> r2 [xlabel="Type: 4"]
      ReceiverPayloadACK -> s3 [xlabel="Type: 5"]
      ReceiverClosing -> s4 [xlabel="Type: 6"]
      SenderClosing -> r3 [xlabel="Type: 7"]
      ReceiverClosingACK -> s5 [xlabel="Type: 8"]
    }

    node[label="",shape=none, width=0, height=0, fixedsize=false]

    s0 -> s1 [arrowhead=none]
    s5 -> s6
    r0 -> ReceiverHandshake
    r4 -> r5


  }
